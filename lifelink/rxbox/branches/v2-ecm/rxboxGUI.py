#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Sat Jul 04 23:04:52 2009

import wx

# begin wxGlade: extracode
# end wxGlade



class RxFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: RxFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.RxFrame_StatusBar = self.CreateStatusBar(1, 0)
        self.PatientInfoHeader_Label = wx.StaticText(self, -1, "Patient Information", style=wx.ALIGN_CENTRE)
        self.PatientInfo_Label = wx.StaticText(self, -1, "No Information")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: RxFrame.__set_properties
        self.SetTitle("RxBox - Philippine General Hospital")
        self.SetSize((1285, 773))
        self.SetBackgroundColour(wx.Colour(245, 255, 207))
        self.RxFrame_StatusBar.SetStatusWidths([-1])
        # statusbar fields
        RxFrame_StatusBar_fields = ["RxBox ready..."]
        for i in range(len(RxFrame_StatusBar_fields)):
            self.RxFrame_StatusBar.SetStatusText(RxFrame_StatusBar_fields[i], i)
        self.PatientInfoHeader_Label.SetMinSize((620, 20))
        self.PatientInfoHeader_Label.SetBackgroundColour(wx.Colour(219, 219, 112))
        self.PatientInfoHeader_Label.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.PatientInfo_Label.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.PatientInfo_Label.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: RxFrame.__do_layout
        mainvertical_sizer = wx.BoxSizer(wx.VERTICAL)
        self.mainhorizontal_sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.info_daq_sizer = wx.BoxSizer(wx.VERTICAL)
        patient_info_tab_sizer = wx.BoxSizer(wx.HORIZONTAL)
        patient_info_sizer = wx.BoxSizer(wx.VERTICAL)
        info_sizer = wx.BoxSizer(wx.HORIZONTAL)
        patient_info_sizer.Add(self.PatientInfoHeader_Label, 1, wx.EXPAND, 0)
        info_sizer.Add(self.PatientInfo_Label, 3, wx.TOP|wx.EXPAND, 1)
        patient_info_sizer.Add(info_sizer, 4, wx.EXPAND, 0)
        patient_info_tab_sizer.Add(patient_info_sizer, 1, wx.EXPAND, 0)
        self.info_daq_sizer.Add(patient_info_tab_sizer, 0, wx.ALL|wx.EXPAND, 4)
        self.mainhorizontal_sizer.Add(self.info_daq_sizer, 3, wx.EXPAND, 0)
        mainvertical_sizer.Add(self.mainhorizontal_sizer, 1, wx.EXPAND, 0)
        self.SetSizer(mainvertical_sizer)
        self.Layout()
        #self.SetSize((1385, 773))
        self.SetSize((1285, 773))
        # end wxGlade

# end of class RxFrame

class DAQPanel(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: DAQPanel.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)

         # bp panel
        self.bp_panel = wx.Panel(self, -1)
        self.slider_panel = wx.Panel(self.bp_panel, -1)
        self.press_panel = wx.Panel(self.bp_panel, -1)

        
        self.button_window_separator = wx.StaticLine(self, -1)
        self.StartStop_Button = wx.BitmapButton(self, -1, wx.Bitmap("Icons/PlayButton.png", wx.BITMAP_TYPE_ANY))
        self.StartStop_Label = wx.StaticText(self, -1, "Start")
        self.Upload_Button = wx.BitmapButton(self, -1, wx.Bitmap("Icons/Upload.png", wx.BITMAP_TYPE_ANY))
        self.Upload_Label = wx.StaticText(self, -1, "Upload")
        self.Call_Button = wx.BitmapButton(self, -1, wx.Bitmap("Icons/Refer.png", wx.BITMAP_TYPE_ANY))
        self.Call_Label = wx.StaticText(self, -1, "Call")
        self.button_display_separator = wx.StaticLine(self, -1)
        self.R_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/R_initial.png", wx.BITMAP_TYPE_ANY))
        self.L_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/L_initial.png", wx.BITMAP_TYPE_ANY))
        self.C1_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/C1_initial.png", wx.BITMAP_TYPE_ANY))
        self.C2_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/C2_initial.png", wx.BITMAP_TYPE_ANY))
        self.C3_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/C3_initial.png", wx.BITMAP_TYPE_ANY))
        self.C4_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/C4_initial.png", wx.BITMAP_TYPE_ANY))
        self.C5_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/C5_initial.png", wx.BITMAP_TYPE_ANY))
        self.C6_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/C6_initial.png", wx.BITMAP_TYPE_ANY))
        self.N_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/N_initial.png", wx.BITMAP_TYPE_ANY))
        self.F_bitmap = wx.StaticBitmap(self, -1, wx.Bitmap("Icons/F_initial.png", wx.BITMAP_TYPE_ANY))
        self.lead12_button = wx.Button(self, -1, "12 Lead")
        self.ecg_label = wx.StaticText(self, -1, "ECG WAVEFORM", style=wx.ALIGN_CENTRE)
        self.ecg_lowerdata_separator = wx.StaticLine(self, -1)
        self.bpNow_Button = wx.Button(self.bp_panel, -1, "NOW")
        #self.bpNow_Button = wx.Button(self, -1, "NOW")
        self.setBPmins_combobox = wx.ComboBox(self, -1, choices=["5 min", "15 min", "30 min", "60 min"], style=wx.CB_DROPDOWN|wx.CB_DROPDOWN)

        #self.bp_pressure = wx.Panel(self,-1)
        self.bp_pressure_indicator = wx.Gauge(self.press_panel,-1, 220, size=(10, 103),style=wx.GA_VERTICAL)

        # default id = -1 is used, initial value = 50, min value = 0, max value = 100
        self.bp_slider = wx.Slider(self.slider_panel, -1, 20, 0, 20,size=(15, 110),style=wx.SL_VERTICAL | wx.SL_AUTOTICKS)
        

        self.bp_label = wx.StaticText(self, -1, "Blood Pressure", style=wx.ALIGN_CENTRE)
        self.bp_infolabel = wx.StaticText(self, -1, "--")
        self.bpvalue_label = wx.StaticText(self, -1, "-- / --", style=wx.ALIGN_CENTRE)
        self.panel_1 = wx.Panel(self, -1)
        self.bpunit_label = wx.StaticText(self, -1, "mmHg", style=wx.ALIGN_RIGHT)
        self.heartrate_label = wx.StaticText(self, -1, "Heart Rate", style=wx.ALIGN_CENTRE)
        self.heartrate_infolabel = wx.StaticText(self, -1, "--")
        self.bpmvalue_label = wx.StaticText(self, -1, "--", style=wx.ALIGN_CENTRE)
        self.panel_2 = wx.Panel(self, -1)
        self.bpmunit_label = wx.StaticText(self, -1, "bpm", style=wx.ALIGN_RIGHT)
        self.spo2_label = wx.StaticText(self, -1, "Blood Oxygen\nSaturation", style=wx.ALIGN_CENTRE)
        self.spo2_infolabel = wx.StaticText(self, -1, "--")
        self.spo2value_label = wx.StaticText(self, -1, "--", style=wx.ALIGN_CENTRE)
        self.panel_3 = wx.Panel(self, -1)
        self.spo2unit_label = wx.StaticText(self, -1, "%SpO2", style=wx.ALIGN_RIGHT)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.onStartStop, self.StartStop_Button)
        self.Bind(wx.EVT_BUTTON, self.onUpload, self.Upload_Button)
        self.Bind(wx.EVT_BUTTON, self.onCall, self.Call_Button)
        self.Bind(wx.EVT_BUTTON, self.on12Lead, self.lead12_button)
        self.Bind(wx.EVT_BUTTON, self.onBPNow, self.bpNow_Button)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: DAQPanel.__set_properties
        self.StartStop_Button.SetBackgroundColour(wx.Colour(50, 50, 204))
        self.StartStop_Button.SetToolTipString("Start data acquisition from the biomedical modules")
        self.StartStop_Button.SetSize(self.StartStop_Button.GetBestSize())
        self.StartStop_Label.SetFont(wx.Font(16, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Arial"))
        self.Upload_Button.SetToolTipString("Stop data acquisition from the biomedical modules")
        self.Upload_Button.Enable(False)
        self.Upload_Button.SetSize(self.Upload_Button.GetBestSize())
        self.Upload_Label.SetFont(wx.Font(16, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Arial"))
        self.Call_Button.SetToolTipString("Stop data acquisition from the biomedical modules")
        self.Call_Button.Enable(False)
        self.Call_Button.SetSize(self.Call_Button.GetBestSize())
        self.Call_Label.SetFont(wx.Font(16, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, "Arial"))
        self.button_display_separator.SetBackgroundColour(wx.Colour(0, 0, 0))
        self.lead12_button.SetFont(wx.Font(16, wx.MODERN, wx.NORMAL, wx.BOLD, 0, ""))
        self.lead12_button.Enable(False)
        self.ecg_label.SetMinSize((306, 20))
        self.ecg_label.SetBackgroundColour(wx.Colour(241, 123, 241))
        self.ecg_label.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.bpNow_Button.SetFont(wx.Font(12, wx.MODERN, wx.NORMAL, wx.BOLD, 0, ""))
        self.setBPmins_combobox.SetSelection(0)
        self.bp_label.SetMinSize((60, 30))
        self.bp_label.SetBackgroundColour(wx.Colour(255, 217, 222))
        self.bp_label.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.bp_infolabel.SetMinSize((145, 30))
        self.bp_infolabel.SetBackgroundColour(wx.Colour(255, 217, 222))
        self.bp_infolabel.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.bpvalue_label.SetMinSize((60, 40))
        self.bpvalue_label.SetBackgroundColour(wx.Colour(255, 217, 222))
        self.bpvalue_label.SetFont(wx.Font(30, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.panel_1.SetBackgroundColour(wx.Colour(255, 217, 222))
        self.bpunit_label.SetMinSize((60, 30))
        self.bpunit_label.SetBackgroundColour(wx.Colour(255, 217, 222))
        self.bpunit_label.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.heartrate_label.SetMinSize((60, 30))
        self.heartrate_label.SetBackgroundColour(wx.Colour(226, 255, 180))
        self.heartrate_label.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.heartrate_infolabel.SetMinSize((145, 30))
        self.heartrate_infolabel.SetBackgroundColour(wx.Colour(226, 255, 180))
        self.heartrate_infolabel.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.bpmvalue_label.SetMinSize((60, 40))
        self.bpmvalue_label.SetBackgroundColour(wx.Colour(226, 255, 180))
        self.bpmvalue_label.SetFont(wx.Font(30, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.panel_2.SetBackgroundColour(wx.Colour(226, 255, 180))
        self.bpmunit_label.SetMinSize((60, 30))
        self.bpmunit_label.SetBackgroundColour(wx.Colour(226, 255, 180))
        self.bpmunit_label.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.spo2_label.SetMinSize((60, 30))
        self.spo2_label.SetBackgroundColour(wx.Colour(201, 248, 255))
        self.spo2_label.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.spo2_infolabel.SetMinSize((145, 30))
        self.spo2_infolabel.SetBackgroundColour(wx.Colour(201, 248, 255))
        self.spo2_infolabel.SetFont(wx.Font(9, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.spo2value_label.SetMinSize((60, 40))
        self.spo2value_label.SetBackgroundColour(wx.Colour(201, 248, 255))
        self.spo2value_label.SetFont(wx.Font(30, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.panel_3.SetBackgroundColour(wx.Colour(201, 248, 255))
        self.spo2unit_label.SetMinSize((60, 30))
        self.spo2unit_label.SetBackgroundColour(wx.Colour(201, 248, 255))
        self.spo2unit_label.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: DAQPanel.__do_layout
        main_vertical_sizer = wx.BoxSizer(wx.VERTICAL)
        lowerdata_horizontal_sizer = wx.BoxSizer(wx.HORIZONTAL)

        # pressure panel
        self.ind_sizer = wx.BoxSizer(wx.HORIZONTAL)#GridSizer(1, 3, 0, 0)
        #self.nowButton_vertical_sizer = wx.BoxSizer(wx.VERTICAL)
        
        
        spo2_sizer = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        spo2_label_sizer = wx.BoxSizer(wx.HORIZONTAL)
        heartrate_sizer = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        heartrate_label_sizer = wx.BoxSizer(wx.HORIZONTAL)
        nowButton_horizontal_sizer = wx.BoxSizer(wx.HORIZONTAL)
        bp_sizer = wx.BoxSizer(wx.VERTICAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        bp_label_sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.nowButton_vertical_sizer = wx.BoxSizer(wx.VERTICAL)
        ecg_horizontal_sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.ecg_vertical_sizer = wx.BoxSizer(wx.VERTICAL)
        image_vertical_sizer = wx.BoxSizer(wx.VERTICAL)
        lead12_vertical_sizer = wx.BoxSizer(wx.VERTICAL)
        ecm_lower_horizontal_sizer = wx.BoxSizer(wx.HORIZONTAL)
        ecm_vertical_sizer = wx.BoxSizer(wx.VERTICAL)
        ecm_horizontal_ltorso_sizer = wx.BoxSizer(wx.HORIZONTAL)
        ecm_horizontal_utorso_sizer = wx.BoxSizer(wx.HORIZONTAL)
        buttons_sizer = wx.BoxSizer(wx.HORIZONTAL)
        main_vertical_sizer.Add(self.button_window_separator, 0, wx.EXPAND, 0)
        buttons_sizer.Add(self.StartStop_Button, 0, wx.ALL, 4)
        buttons_sizer.Add(self.StartStop_Label, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 4)
        buttons_sizer.Add((20, 20), 1, wx.ALL|wx.EXPAND, 4)
        buttons_sizer.Add(self.Upload_Button, 0, wx.ALL, 4)
        buttons_sizer.Add(self.Upload_Label, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        buttons_sizer.Add(self.Call_Button, 0, wx.ALL, 4)
        buttons_sizer.Add(self.Call_Label, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        main_vertical_sizer.Add(buttons_sizer, 0, wx.ALL|wx.EXPAND, 0)
        main_vertical_sizer.Add(self.button_display_separator, 0, wx.ALL|wx.EXPAND, 2)
        ecm_horizontal_utorso_sizer.Add(self.R_bitmap, 0, 0, 0)
        ecm_horizontal_utorso_sizer.Add(self.L_bitmap, 0, 0, 0)
        ecm_vertical_sizer.Add(ecm_horizontal_utorso_sizer, 1, 0, 0)
        ecm_horizontal_ltorso_sizer.Add(self.C1_bitmap, 0, 0, 0)
        ecm_horizontal_ltorso_sizer.Add(self.C2_bitmap, 0, 0, 0)
        ecm_horizontal_ltorso_sizer.Add(self.C3_bitmap, 0, 0, 0)
        ecm_horizontal_ltorso_sizer.Add(self.C4_bitmap, 0, 0, 0)
        ecm_horizontal_ltorso_sizer.Add(self.C5_bitmap, 0, 0, 0)
        ecm_horizontal_ltorso_sizer.Add(self.C6_bitmap, 0, 0, 0)
        ecm_vertical_sizer.Add(ecm_horizontal_ltorso_sizer, 2, wx.SHAPED, 0)
        image_vertical_sizer.Add(ecm_vertical_sizer, 0, 0, 1)
        ecm_lower_horizontal_sizer.Add(self.N_bitmap, 0, 0, 0)
        ecm_lower_horizontal_sizer.Add(self.F_bitmap, 0, 0, 0)
        image_vertical_sizer.Add(ecm_lower_horizontal_sizer, 1, wx.EXPAND, 0)
        lead12_vertical_sizer.Add(self.lead12_button, 1, wx.EXPAND, 0)
        lead12_vertical_sizer.Add((20, 50), 0, wx.EXPAND, 0)
        lead12_vertical_sizer.Add((20, 50), 0, wx.EXPAND, 0)
        image_vertical_sizer.Add(lead12_vertical_sizer, 1, wx.EXPAND, 0)
        ecg_horizontal_sizer.Add(image_vertical_sizer, 0, 0, 0)
        self.ecg_vertical_sizer.Add(self.ecg_label, 0, wx.ALL|wx.EXPAND, 4)
        ecg_horizontal_sizer.Add(self.ecg_vertical_sizer, 5, wx.EXPAND, 0)
        main_vertical_sizer.Add(ecg_horizontal_sizer, 1, wx.EXPAND, 0)
        main_vertical_sizer.Add(self.ecg_lowerdata_separator, 0, wx.EXPAND, 0)
        self.nowButton_vertical_sizer.Add(self.bpNow_Button, 2, wx.EXPAND, 0)
        self.nowButton_vertical_sizer.Add(self.setBPmins_combobox, 1, wx.BOTTOM|wx.EXPAND, 0)

        self.ind_sizer.Add(self.nowButton_vertical_sizer, 2, wx.EXPAND, 0)
        self.ind_sizer.Add(self.slider_panel, 1, wx.EXPAND, 0)
        self.ind_sizer.Add(self.press_panel, 1, wx.EXPAND, 0)
        self.bp_panel.SetSizer(self.ind_sizer)


        #nowButton_horizontal_sizer.Add(nowButton_vertical_sizer, 1, wx.EXPAND, 0)
        nowButton_horizontal_sizer.Add(self.bp_panel, 1, wx.EXPAND, 0)
        
        bp_label_sizer.Add(self.bp_label, 1, wx.BOTTOM, 1)
        bp_label_sizer.Add(self.bp_infolabel, 1, wx.BOTTOM|wx.EXPAND, 1)
        bp_sizer.Add(bp_label_sizer, 0, wx.EXPAND, 0)
        sizer_2.Add(self.bpvalue_label, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(self.panel_1, 1, wx.EXPAND|wx.ALIGN_RIGHT, 0)
        sizer_4.Add(sizer_2, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_4, 1, wx.EXPAND, 0)
        bp_sizer.Add(sizer_1, 1, wx.EXPAND, 0)
        bp_sizer.Add(self.bpunit_label, 0, wx.EXPAND, 0)
        nowButton_horizontal_sizer.Add(bp_sizer, 4, wx.RIGHT|wx.TOP|wx.BOTTOM|wx.EXPAND, 4)
        lowerdata_horizontal_sizer.Add(nowButton_horizontal_sizer, 1, wx.EXPAND, 0)
        heartrate_label_sizer.Add(self.heartrate_label, 1, wx.BOTTOM|wx.EXPAND, 1)
        heartrate_label_sizer.Add(self.heartrate_infolabel, 1, wx.BOTTOM|wx.EXPAND, 1)
        heartrate_sizer.Add(heartrate_label_sizer, 0, wx.EXPAND, 0)
        sizer_3.Add(self.bpmvalue_label, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_3.Add(self.panel_2, 1, wx.EXPAND|wx.ALIGN_RIGHT, 0)
        heartrate_sizer.Add(sizer_3, 1, wx.EXPAND, 0)
        heartrate_sizer.Add(self.bpmunit_label, 0, wx.EXPAND, 0)
        lowerdata_horizontal_sizer.Add(heartrate_sizer, 1, wx.RIGHT|wx.TOP|wx.BOTTOM|wx.EXPAND, 4)
        spo2_label_sizer.Add(self.spo2_label, 1, wx.BOTTOM|wx.EXPAND, 1)
        spo2_label_sizer.Add(self.spo2_infolabel, 1, wx.BOTTOM|wx.EXPAND, 1)
        spo2_sizer.Add(spo2_label_sizer, 0, wx.EXPAND, 0)
        sizer_5.Add(self.spo2value_label, 0, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_5.Add(self.panel_3, 1, wx.EXPAND|wx.ALIGN_RIGHT, 0)
        spo2_sizer.Add(sizer_5, 1, wx.EXPAND, 0)
        spo2_sizer.Add(self.spo2unit_label, 0, wx.EXPAND, 0)
        lowerdata_horizontal_sizer.Add(spo2_sizer, 1, wx.RIGHT|wx.TOP|wx.BOTTOM|wx.EXPAND, 4)
        main_vertical_sizer.Add(lowerdata_horizontal_sizer, 0, wx.EXPAND, 0)
        self.SetSizer(main_vertical_sizer)
        main_vertical_sizer.Fit(self)
        # end wxGlade

    def onStartStop(self, event): # wxGlade: DAQPanel.<event_handler>
        print "Event handler `onStartStop' not implemented!"
        event.Skip()

    def onUpload(self, event): # wxGlade: DAQPanel.<event_handler>
        print "Event handler `onUpload' not implemented!"
        event.Skip()

    def onCall(self, event): # wxGlade: DAQPanel.<event_handler>
        print "Event handler `onCall' not implemented!"
        event.Skip()

    def on12Lead(self, event): # wxGlade: DAQPanel.<event_handler>
        print "Event handler `on12Lead' not implemented!"
        event.Skip()

    def onBPNow(self, event): # wxGlade: DAQPanel.<event_handler>
        print "Event handler `onBPNow' not implemented!"
        event.Skip()

# end of class DAQPanel


class ReferPanel(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: refer_panel_new.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.Videoconf_Label = wx.StaticText(self, -1, "Video", style=wx.ALIGN_CENTRE)
        self.video_panel = wx.Panel(self, -1)
        self.snap_prev = wx.Button(self, -1, "Snapshot")
        self.Photosnap_label = wx.StaticText(self, -1, "Snapshot", style=wx.ALIGN_CENTRE)
        self.photo_panel = wx.Panel(self, -1)
        self.prev_snapshot = wx.Button(self, -1, "<<  Prev")
        self.next_snapshot = wx.Button(self, -1, "Next >>")
        self.IM_Label = wx.StaticText(self, -1, "Instant Messaging", style=wx.ALIGN_CENTRE)
        self.IMtexts_Text = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER|wx.TE_MULTILINE|wx.TE_READONLY)
        self.IMreply_Text = wx.TextCtrl(self, -1, "", style=wx.TE_PROCESS_ENTER|wx.TE_MULTILINE)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.onSnapshot, self.snap_prev)
        self.Bind(wx.EVT_BUTTON, self.onPrevSnapshot, self.prev_snapshot)
        self.Bind(wx.EVT_BUTTON, self.onNextSnapshot, self.next_snapshot)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: refer_panel_new.__set_properties
        self.Videoconf_Label.SetBackgroundColour(wx.Colour(251, 255, 100))
        self.Videoconf_Label.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.video_panel.SetMinSize((320,240))
        self.snap_prev.SetBackgroundColour(wx.Colour(255, 0, 0))
        self.Photosnap_label.SetBackgroundColour(wx.Colour(251, 255, 100))
        self.Photosnap_label.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.photo_panel.SetMinSize((320,240))
        self.prev_snapshot.SetBackgroundColour(wx.Colour(255, 127, 0))
        self.next_snapshot.SetBackgroundColour(wx.Colour(255, 127, 0))
        self.IM_Label.SetMinSize((620, 20))
        self.IM_Label.SetBackgroundColour(wx.Colour(253, 255, 191))
        self.IM_Label.SetFont(wx.Font(10, wx.MODERN, wx.NORMAL, wx.BOLD, 0, "Arial"))
        self.IMtexts_Text.SetBackgroundColour(wx.Colour(255, 255, 255))
        self.IMreply_Text.SetBackgroundColour(wx.Colour(255, 255, 255))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: refer_panel_new.__do_layout
        refer_panel_sizer = wx.FlexGridSizer(3, 1, 0, 0)
        im_sizer = wx.BoxSizer(wx.VERTICAL)
        sizer_18 = wx.BoxSizer(wx.VERTICAL)
        photosnap_sizer = wx.BoxSizer(wx.VERTICAL)
        photo_holder = wx.FlexGridSizer(2, 1, 0, 0)
        grid_sizer_2 = wx.GridSizer(1, 2, 0, 0)
        video_sizer = wx.BoxSizer(wx.VERTICAL)
        video_holder = wx.FlexGridSizer(2, 1, 0, 0)
        video_sizer.Add(self.Videoconf_Label, 0, wx.ALL|wx.EXPAND, 0)
        video_holder.Add(self.video_panel, 0, wx.ALL|wx.EXPAND, 0)
        video_holder.Add(self.snap_prev, 0, wx.ALL|wx.EXPAND, 0)
        video_sizer.Add(video_holder, 1, wx.EXPAND, 0)
        refer_panel_sizer.Add(video_sizer, 1, wx.ALL|wx.EXPAND, 0)
        photosnap_sizer.Add(self.Photosnap_label, 0, wx.ALL|wx.EXPAND, 0)
        photo_holder.Add(self.photo_panel, 0, wx.ALL|wx.EXPAND, 0)
        grid_sizer_2.Add(self.prev_snapshot, 0, wx.EXPAND, 0)
        grid_sizer_2.Add(self.next_snapshot, 0, wx.EXPAND, 0)
        photo_holder.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        photosnap_sizer.Add(photo_holder, 1, wx.EXPAND, 0)
        refer_panel_sizer.Add(photosnap_sizer, 1, wx.EXPAND, 0)
        im_sizer.Add(self.IM_Label, 1, wx.RIGHT|wx.EXPAND, 1)
        sizer_18.Add(self.IMtexts_Text, 3, wx.TOP|wx.EXPAND, 1)
        sizer_18.Add(self.IMreply_Text, 0, wx.TOP|wx.EXPAND, 4)
        im_sizer.Add(sizer_18, 8, wx.EXPAND, 0)
        refer_panel_sizer.Add(im_sizer, 1, wx.EXPAND, 0)
        self.SetSizer(refer_panel_sizer)
        refer_panel_sizer.Fit(self)
        # end wxGlade

    def onSnapshot(self, event): # wxGlade: refer_panel_new.<event_handler>
        print "Event handler `onSnapshot' not implemented!"
        event.Skip()

    def onPrevSnapshot(self, event): # wxGlade: refer_panel_new.<event_handler>
        print "Event handler `onPrevSnapshot' not implemented!"
        event.Skip()

    def onNextSnapshot(self, event): # wxGlade: refer_panel_new.<event_handler>
        print "Event handler `onNextSnapshot' not implemented!"
        event.Skip()


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    rx_frame = RxFrame(None, -1, "")
    app.SetTopWindow(rx_frame)
    rx_frame.Show()
    app.MainLoop()
